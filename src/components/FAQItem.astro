---
import type { FAQItem } from '@/types';

interface Props {
  item: FAQItem;
  index: number;
}

const { item, index } = Astro.props;
const id = `faq-${index}`;
---

<div class="border-b border-border last:border-b-0">
  <button
    class="w-full py-5 flex items-center justify-between text-left group focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-primary focus-visible:ring-offset-2 rounded-md"
    aria-expanded="false"
    aria-controls={id}
    data-faq-trigger
  >
    <span class="text-lg font-semibold text-text-primary pr-8 group-hover:text-text-primary">
      {item.question}
    </span>
    <svg
      class="w-5 h-5 text-text-secondary transition-transform duration-200 flex-shrink-0"
      data-faq-icon
      fill="none"
      stroke="currentColor"
      viewBox="0 0 24 24"
    >
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4"/>
    </svg>
  </button>
  
  <div
    id={id}
    class="overflow-hidden transition-all duration-200"
    style="max-height: 0;"
    data-faq-content
  >
    <div class="pb-5 pr-8">
      <p class="text-base text-text-secondary leading-relaxed">
        {item.answer}
      </p>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const triggers = document.querySelectorAll('[data-faq-trigger]');
    
    triggers.forEach(trigger => {
      trigger.addEventListener('click', () => {
        const content = trigger.nextElementSibling as HTMLElement;
        const icon = trigger.querySelector('[data-faq-icon]') as SVGElement;
        const isExpanded = trigger.getAttribute('aria-expanded') === 'true';
        
        // Toggle current item
        trigger.setAttribute('aria-expanded', String(!isExpanded));
        
        if (!isExpanded) {
          content.style.maxHeight = content.scrollHeight + 'px';
          // Cambiar icono a menos (-)
          const path = icon.querySelector('path');
          if (path) {
            path.setAttribute('d', 'M20 12H4');
          }
        } else {
          content.style.maxHeight = '0';
          // Cambiar icono a m√°s (+)
          const path = icon.querySelector('path');
          if (path) {
            path.setAttribute('d', 'M12 4v16m8-8H4');
          }
        }
      });
    });
  });
</script>