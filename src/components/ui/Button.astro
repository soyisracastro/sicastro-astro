---
interface Props {
  variant?: 'primary' | 'secondary' | 'ghost';
  size?: 'sm' | 'md' | 'lg';
  href?: string;
  type?: 'button' | 'submit' | 'reset';
  class?: string;
  disabled?: boolean;
  target?: string;
  rel?: string;
}

const {
  variant = 'primary',
  size = 'md',
  href,
  type = 'button',
  class: className = '',
  disabled = false,
  target,
  rel,
  ...rest
} = Astro.props;

const baseClasses = 'inline-flex items-center justify-center font-medium transition-colors duration-fast focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-primary focus-visible:ring-offset-2 rounded-md disabled:opacity-50 disabled:cursor-not-allowed disabled:pointer-events-none';

const variantClasses = {
  primary: 'text-white bg-primary hover:bg-text-primary/90',
  secondary: 'text-text-primary bg-transparent border border-border hover:bg-background-hover',
  ghost: 'text-text-secondary hover:bg-background-hover hover:text-text-primary',
};

const sizeClasses = {
  sm: 'px-4 py-2 text-sm',
  md: 'px-5 py-3 text-base',
  lg: 'px-6 py-3.5 text-lg',
};

const classes = `${baseClasses} ${variantClasses[variant]} ${sizeClasses[size]} ${className}`;

const Element = href ? 'a' : 'button';
---

<Element
  class={classes}
  href={href}
  type={!href ? type : undefined}
  disabled={!href ? disabled : undefined}
  target={target}
  rel={rel}
  {...rest}
>
  <slot />
</Element>