---
import { navItems, companyInfo } from '@/lib/data';

const currentPath = Astro.url.pathname;
---

<header class="sticky top-0 z-50 bg-white shadow-md">
  <div class="container-custom">
    <div class="flex items-center justify-between py-4">
      <!-- Logo -->
      <a href="/" class="flex items-center space-x-3 focus-visible:focus">
        <div class="flex items-center justify-center w-12 h-12 bg-primary rounded-lg">
          <span class="text-2xl font-bold text-white">SC</span>
        </div>
        <div class="hidden sm:block">
          <div class="font-heading text-xl font-bold text-dark leading-tight">
            {companyInfo.name}
          </div>
          <div class="text-xs text-dark-light">
            {companyInfo.slogan}
          </div>
        </div>
      </a>

      <!-- Desktop Navigation -->
      <nav class="hidden lg:flex items-center space-x-8">
        {navItems.map(item => (
          <a
            href={item.href}
            class:list={[
              'text-base font-medium transition-colors duration-200 focus-visible:focus',
              currentPath === item.href
                ? 'text-primary font-semibold'
                : 'text-dark hover:text-primary'
            ]}
          >
            {item.label}
          </a>
        ))}
        <a
          href="/contacto"
          class="btn-primary"
        >
          Contáctanos
        </a>
      </nav>

      <!-- Mobile Menu Button -->
      <button
        id="mobile-menu-button"
        type="button"
        class="lg:hidden inline-flex items-center justify-center p-2 rounded-lg text-dark hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-primary"
        aria-label="Abrir menú"
        aria-expanded="false"
      >
        <svg
          class="w-6 h-6"
          fill="none"
          stroke="currentColor"
          viewBox="0 0 24 24"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M4 6h16M4 12h16M4 18h16"
          />
        </svg>
      </button>
    </div>
  </div>

  <!-- Mobile Menu -->
  <div
    id="mobile-menu"
    class="hidden lg:hidden border-t border-gray-200"
  >
    <div class="container-custom py-4 space-y-2">
      {navItems.map(item => (
        <a
          href={item.href}
          class:list={[
            'block px-4 py-3 rounded-lg text-base font-medium transition-colors duration-200',
            currentPath === item.href
              ? 'bg-primary-light text-primary font-semibold'
              : 'text-dark hover:bg-gray-100'
          ]}
        >
          {item.label}
        </a>
      ))}
      <a
        href="/contacto"
        class="block px-4 py-3 mt-4 text-center btn-primary w-full"
      >
        Contáctanos
      </a>
    </div>
  </div>
</header>

<script>
  // Mobile menu toggle
  document.addEventListener('DOMContentLoaded', () => {
    const button = document.getElementById('mobile-menu-button');
    const menu = document.getElementById('mobile-menu');

    if (button && menu) {
      button.addEventListener('click', () => {
        const isExpanded = button.getAttribute('aria-expanded') === 'true';
        button.setAttribute('aria-expanded', String(!isExpanded));
        menu.classList.toggle('hidden');
        
        // Update icon
        const svg = button.querySelector('svg path');
        if (svg) {
          if (isExpanded) {
            svg.setAttribute('d', 'M4 6h16M4 12h16M4 18h16');
          } else {
            svg.setAttribute('d', 'M6 18L18 6M6 6l12 12');
          }
        }
      });

      // Close menu when clicking outside
      document.addEventListener('click', (e) => {
        if (!button.contains(e.target as Node) && !menu.contains(e.target as Node)) {
          menu.classList.add('hidden');
          button.setAttribute('aria-expanded', 'false');
        }
      });

      // Close menu on navigation
      const links = menu.querySelectorAll('a');
      links.forEach(link => {
        link.addEventListener('click', () => {
          menu.classList.add('hidden');
          button.setAttribute('aria-expanded', 'false');
        });
      });
    }
  });
</script>